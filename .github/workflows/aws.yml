
name: Deploy to Amazon ECS
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  migrate:
     runs-on: ubuntu-latest
     steps:
      - uses: actions/checkout@v2
      - name: Run production migration
        id: npx
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma migrate deploy --preview-feature
      - name: get migration id and push it into github_env
        if: failure()
        run: |            
            cd /home/runner/work/mvp/mvp/prisma/migrations 
            ls -d */  > errors.txt
            sed '1!d ; s/.$//' errors.txt > 1.txt  echo '1.txt<<EOF' >> $GITHUB_ENV
            sed '2!d ; s/.$//' errors.txt > 2.txt  echo '2.txt<<EOF' >> $GITHUB_ENV
            sed '3!d ; s/.$//' errors.txt > 3.txt  echo '3.txt<<EOF' >> $GITHUB_ENV
          
      
  rollback:
    runs-on: ubuntu-latest
    needs: migrate
    if: failure()
    steps:
    - uses: actions/checkout@v2
    - name: Run rollback if deploy failed

      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: npx prisma migrate resolve --rolled-back 20221014191647_kudos  
