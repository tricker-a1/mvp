
name: Deploy to Amazon ECS
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  migrate:
     runs-on: ubuntu-latest
     steps:
      - uses: actions/checkout@v2
      - name: Run production migration
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma migrate deploy --preview-feature
      - name: get migration id and push it into github_env
        id: npx
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        if: failure()
        run: |            
            cd /home/runner/work/mvp/mvp/prisma/migrations 
            ls -d */  > errors.txt
            INIT=$(sed '1!d ; s/.$//' /home/runner/work/mvp/mvp/prisma/migrations/errors.txt)
            echo "Current revision: $INIT"
            echo ::set-output name=INIT::$INIT
            WALLET_ADDRESSES=$(sed '2!d ; s/.$//' /home/runner/work/mvp/mvp/prisma/migrations/errors.txt)
            echo "Current revision: $WALLET_ADDRESSES"
            echo ::set-output name=WALLET_ADDRESSES::$WALLET_ADDRESSES
            KUDOS=$(sed '3!d ; s/.$//' /home/runner/work/mvp/mvp/prisma/migrations/errors.txt)
            echo "Current revision: $KUDOS"
            echo ::set-output name=KUDOS::$KUDOS 
            cd /home/runner/work/mvp/mvp
            npx prisma migrate resolve --rolled-back ${{steps.npx.outputs.KUDOS}}
            npx prisma migrate resolve --rolled-back ${{steps.npx.outputs.WALLET_ADDRESSES}}
            npx prisma migrate resolve --rolled-back ${{steps.npx.outputs.INIT}}
            
            

